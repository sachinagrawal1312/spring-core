1
00:00:02,690 --> 00:00:07,860
Come back in the way you will get a quick overview of the spring and we see frame work we'll talk about

2
00:00:07,860 --> 00:00:10,990
and example control metal in the spring and we see frame work.

3
00:00:11,010 --> 00:00:16,870
How does the flow happen in spring NBC and the different important concepts call your resolver model

4
00:00:16,870 --> 00:00:18,960
model and you and request mapping.

5
00:00:19,140 --> 00:00:22,520
Let's consider a simple screen which is being displayed in here.

6
00:00:22,530 --> 00:00:27,010
So this is a screen with a list of clues which is being shown in here.

7
00:00:27,060 --> 00:00:32,620
If you look at this list of tools there are a list of six truths which we're getting from the database.

8
00:00:32,670 --> 00:00:38,910
When I refresh the page you'd see that there would be six two rows which are coming up and the functionality

9
00:00:38,910 --> 00:00:45,260
which is present on this page allows you to add two rows as well as Update and delete to as well.

10
00:00:45,420 --> 00:00:49,640
The first thing we want to do is display the list of to do so when I invoke this.

11
00:00:49,630 --> 00:00:55,770
You While there are a lot of things which happen in the background as spring NBC is concerned let's

12
00:00:55,920 --> 00:00:59,550
first look at the control method which implements this.

13
00:00:59,820 --> 00:01:03,100
If you look at the control method we are seeing lists to do.

14
00:01:03,180 --> 00:01:05,840
So what is the list to reduce it.

15
00:01:06,020 --> 00:01:09,730
So this is that you are in which we are mapping in here.

16
00:01:09,870 --> 00:01:13,440
What kind of request request method it get.

17
00:01:13,440 --> 00:01:18,450
So basically when you type in or you are telling the browser what happened to or when you click a link

18
00:01:18,450 --> 00:01:19,040
here.

19
00:01:19,160 --> 00:01:25,290
Yes sending a get the quest we would want to handle the GET request to list to do this.

20
00:01:25,290 --> 00:01:26,690
How do you define that.

21
00:01:26,700 --> 00:01:30,690
We define that using something called a request mapping.

22
00:01:30,720 --> 00:01:37,950
So the request mapping is the thing which allows you to map where you are and any type of with the type

23
00:01:37,950 --> 00:01:43,520
of the request here is get something get request of this you should go to this summit.

24
00:01:43,890 --> 00:01:46,880
And what does this method do this method.

25
00:01:46,920 --> 00:01:50,340
What we would need to do is show this page.

26
00:01:50,430 --> 00:01:56,130
Do you think what you're seeing in here is called a view and to display this view.

27
00:01:56,160 --> 00:01:57,290
We need the data.

28
00:01:57,300 --> 00:01:58,410
What is the data.

29
00:01:58,410 --> 00:02:02,410
The data is all the stuff to lose that data is in there are six to do.

30
00:02:02,550 --> 00:02:07,650
So a list of six to do is I would need to get this six to use the data for these two.

31
00:02:07,700 --> 00:02:09,930
Is what is called moral.

32
00:02:10,140 --> 00:02:17,610
So what is happening here is we would need to put the data for all these six truth into the model and

33
00:02:17,880 --> 00:02:23,070
redirect it to would just be what's happening in the background is why not.

34
00:02:23,100 --> 00:02:28,140
Been to you while the request first goes to something called Dispatches So let's not worry about it

35
00:02:28,140 --> 00:02:28,400
right.

36
00:02:28,410 --> 00:02:28,770
No.

37
00:02:28,830 --> 00:02:35,160
From dispatcher sublet the request comes to the controller to this method and this method what it does

38
00:02:35,580 --> 00:02:42,250
is it first calls this service to retrieve the details of all that to do.

39
00:02:42,240 --> 00:02:47,170
So it says OK give me the list of tollbooths for this specific user who has logged in.

40
00:02:47,310 --> 00:02:54,480
And once it gets the details of the truth it puts it into a moral model is what we would need model

41
00:02:54,510 --> 00:02:55,890
is basically the data.

42
00:02:56,130 --> 00:03:00,430
And what we are doing is we are making the model available to the view.

43
00:03:00,450 --> 00:03:03,910
The view is less to those dark days.

44
00:03:04,170 --> 00:03:11,010
So the JCP is the one which will make use of the data we're just coming back to the list of rules which

45
00:03:11,010 --> 00:03:11,870
are coming back.

46
00:03:11,970 --> 00:03:17,130
Just be big and show them in this in this specific way.

47
00:03:17,250 --> 00:03:23,160
When I look at this controller method what it's doing is it can accept requests of this type populate

48
00:03:23,190 --> 00:03:30,370
the model the control method what it does it populates the model and returns the name of the view dening

49
00:03:30,460 --> 00:03:34,380
list to those That's the name of the view to be executed.

50
00:03:34,380 --> 00:03:39,410
How does this name of the view get mapped to the actual view.

51
00:03:39,420 --> 00:03:46,120
How does this list used or does B get mapped to my dsp list to lose or just be just present in webapp

52
00:03:46,200 --> 00:03:49,220
babay Neff views and list Bruce Rogers.

53
00:03:49,350 --> 00:03:52,460
So the controller method if you look at it it's just beginning to lose.

54
00:03:52,560 --> 00:03:54,530
And how does it get mapped to this truce.

55
00:03:54,550 --> 00:03:58,830
Or just be that through something called rezone.

56
00:03:59,070 --> 00:04:06,030
So what happens is if you resolver outbuild OK you get a name then you can append a prefix of flashbulb

57
00:04:06,260 --> 00:04:06,970
last for use.

58
00:04:07,050 --> 00:04:08,620
And the Dodges.

59
00:04:08,850 --> 00:04:14,230
Then what happens is this just the list to lose is displayed.

60
00:04:14,340 --> 00:04:21,900
And in this GSB we make use of the tools which was populated by the controller method and we would display

61
00:04:21,990 --> 00:04:28,950
the content on the screen somebody the control amateur populates the model and it turns the name off

62
00:04:28,950 --> 00:04:33,970
of you how does the enter flow in spring NBC work from the browser.

63
00:04:33,990 --> 00:04:40,620
The first request comes to something called the dispatcher so so the dispatcher servlet in the example

64
00:04:40,620 --> 00:04:44,370
that we were talking about what happens is I'm typing in a huge area.

65
00:04:44,430 --> 00:04:50,400
So first it goes to the dispatcher service that what the dispatcher certainly knows is it knows about

66
00:04:50,430 --> 00:04:56,570
all the controls which are defined in our application so it knows that there is an exception controller

67
00:04:56,580 --> 00:05:02,080
there is another controller there's a welcome controller it knows that what you are told is that a map

68
00:05:02,080 --> 00:05:04,640
to it to it knows that this is the slash.

69
00:05:04,830 --> 00:05:09,930
It knows that there is to do a controller which is present in here which would be able to handle the

70
00:05:09,920 --> 00:05:16,480
different request list to lose and to do and all the other methods which are defined in here.

71
00:05:16,540 --> 00:05:23,310
Dispatcher Sublette knows all the hndler mapping the mapping of controller to you.

72
00:05:23,340 --> 00:05:28,950
It's called a handler mapping Ignaz controller can handle which kind of requests.

73
00:05:28,980 --> 00:05:35,040
So what it does is when it gets this list traduce it will look up Handler mappings to look up the handload

74
00:05:35,040 --> 00:05:35,730
mappings.

75
00:05:35,890 --> 00:05:36,380
OK.

76
00:05:36,390 --> 00:05:39,150
It sees for this controller two controllers.

77
00:05:39,150 --> 00:05:40,590
This method is the right one.

78
00:05:40,590 --> 00:05:45,060
So it will redirect the request to the controller controller.

79
00:05:45,080 --> 00:05:51,270
What it does it would populate the model so that what we see in the previous method it populated the

80
00:05:51,270 --> 00:05:56,990
model with the details of the to do the what does the controller do it populates the modeling.

81
00:05:57,090 --> 00:06:00,850
If any updates to the database need to be made it will make that update.

82
00:06:01,080 --> 00:06:05,610
It will retrieve the data that is needed to display the next screen and what it really did and back

83
00:06:05,610 --> 00:06:12,300
to the dispatcher submit it will return back the name of the view once one dispatcher so that gets the

84
00:06:12,300 --> 00:06:13,350
name of the view.

85
00:06:13,440 --> 00:06:15,450
It will invoke the view resile work.

86
00:06:15,450 --> 00:06:19,110
So it says OK this is the name I'm getting back from the controller.

87
00:06:19,110 --> 00:06:21,490
How do I map it to the view.

88
00:06:21,510 --> 00:06:28,380
So the dispatcher says OK if your resolver mapping to the physical to your name and board there's deputies

89
00:06:28,380 --> 00:06:30,830
and we'll do the viewed as a lawyer would say OK.

90
00:06:30,890 --> 00:06:38,010
Append a prefix and suffix and that you would just be that you need to show and we would land up on

91
00:06:38,130 --> 00:06:40,020
the list to those dark days.

92
00:06:40,200 --> 00:06:43,090
The dispatcher would read it at the request of the view.

93
00:06:43,150 --> 00:06:48,890
With the more the president quitted and the view would be rendered with the model and dispatch it so

94
00:06:48,980 --> 00:06:53,780
it would get the hitch D.M. back and it would send it back to the browser.

95
00:06:54,000 --> 00:07:00,810
So that's kind of the big picture of how the request works in spring and we it quickly the riser to

96
00:07:01,140 --> 00:07:01,490
dispatch.

97
00:07:01,500 --> 00:07:07,530
So that gets the request ignores the handler mappings it finds the appropriate controller calls it controller

98
00:07:07,530 --> 00:07:14,190
execute the request it puts the data in the model and returns back the view name to the dispatcher service

99
00:07:14,270 --> 00:07:20,970
dispatcher that uses the view name and use that the viewers word to map it to a physical view name and

100
00:07:21,000 --> 00:07:27,540
executes the view makes the model available to the view get the hitch DML malcontent and end up back

101
00:07:27,540 --> 00:07:28,360
to the browser.

102
00:07:28,380 --> 00:07:32,330
So it's back to the browser and browser would render it on the screen.

103
00:07:32,370 --> 00:07:35,700
That's kind of the high level flow with being in the seat.

104
00:07:35,770 --> 00:07:41,790
That is one more important concept regarding more and more into bring in because if you look at it there

105
00:07:41,790 --> 00:07:43,360
are two things.

106
00:07:43,390 --> 00:07:50,220
Model map which is typically called a wallet and also more than you which is used as well.

107
00:07:50,370 --> 00:07:55,230
So what is the difference between model and model and actually there is not a lot of difference between

108
00:07:55,230 --> 00:08:01,680
the and the model and when I'm using a model model can only store the data in the model and putting

109
00:08:01,680 --> 00:08:04,130
the data and returning the viewer back.

110
00:08:04,140 --> 00:08:09,810
The other option of having a controller method is to return the model and view so what I can do is I

111
00:08:09,810 --> 00:08:13,470
can create an object called Model and you can set data.

112
00:08:13,470 --> 00:08:20,700
So I am setting data using embedded add objects I'm sending data directly in and I'm also setting the

113
00:08:20,700 --> 00:08:28,950
view Neame welcome and returning it back when I have a preference for this approach.

114
00:08:29,010 --> 00:08:35,040
The approach where I added the view name and populate the Mordred it leaves a clear separation between

115
00:08:35,040 --> 00:08:40,350
the modal and the view but it's more of a mind you prefer and you can use either of them.

116
00:08:40,380 --> 00:08:44,150
For me I prefer this one because it's much more readable.

117
00:08:44,310 --> 00:08:48,110
In this when we looked at some of the important questions related to spring him.

118
00:08:48,110 --> 00:08:53,250
You see we get an example control method which was using that request mapping so the request mapping

119
00:08:53,250 --> 00:08:59,350
is used to map you out to a specific job or control them.

120
00:08:59,760 --> 00:09:06,110
And we talked about the simple flow in being MVC using dispatcher servlet resolver model and model.

121
00:09:06,420 --> 00:09:07,580
And in the next video boy.

